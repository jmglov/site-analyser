{:paths ["."]
 :deps {net.jmglov/blambda {:local/root "../blambda"}
        #_"You use the newest SHA here:"
        #_{:git/url "https://github.com/jmglov/blambda.git"
           :git/sha "2453e15cf75c03b2b02de5ca89c76081bba40251"}}
 :tasks
 {:requires ([blambda.cli :as blambda]
             [clojure.string :as str])

  blambda {:doc "Controls Blambda runtime and layers"
           :task
           (let [get-env (fn [k] (let [v (System/getenv k)]
                                   (when-not v
                                     (println "Missing environment variable:" k)
                                     (System/exit 1))
                                   v))
                 lambda-env-vars (->> ["CLOUDFRONT_DIST_ID" "S3_BUCKET" "S3_PREFIX"]
                                      (map (fn [k] (format "%s=%s" k (get-env k))))
                                      (concat ["VIEWS_TABLE=${aws_dynamodb_table.site_analyser.name}"]))]
             (blambda/dispatch
              {:bb-arch "arm64"
               :lambda-name "site-analyser"
               :lambda-handler "handler/handle-request"
               :deps-layer-name "s3-log-parser-deps"
               :lambda-iam-role "${aws_iam_role.lambda.arn}"
               :lambda-env-vars lambda-env-vars
               :source-files ["handler.clj"
                              "logs.clj"
                              "parser.clj"
                              "queries.clj"
                              "util.clj"]
               :use-s3 true
               :s3-bucket (get-env "ARTIFACTS_BUCKET")
               :s3-artifact-path "lambda-artifacts"
               :extra-tf-config ["tf/main.tf"]}))}}}
